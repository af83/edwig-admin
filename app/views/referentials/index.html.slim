/ PageHeader
- header_params = ['map-marker',
        t('referentials.title'),
        '']
- header_params << link_to(t('referentials.create.title'), new_referential_path, class: 'btn btn-default')
= pageheader(*header_params)

/ PageContent
.page_content
  .container-fluid
    - if @referentials_tab.any?
    .row
      .col-lg-12
        table.table.has-filter
          thead
            tr
              th
                a href="/calendars?direction=desc&amp;sort=name"
                  = t('attributes.id')
                  span.orderers
                    span.fa.fa-sort-asc.active
                    span.fa.fa-sort-desc
              th
                a href="/calendars?direction=desc&amp;sort=short_name"
                  = t('attributes.slug')
                  span.orderers
                    span.fa.fa-sort-asc.active
                    span.fa.fa-sort-desc
              th
                a href="/calendars?direction=desc&amp;sort=shared"
                  = t('attributes.attributes.next_reload_at')
                  span.orderers
                    span.fa.fa-sort-asc.active
                    span.fa.fa-sort-desc
              th
                a href="/calendars?direction=desc&amp;sort=shared"
                  = t('attributes.attributes.token')
                  span.orderers
                    span.fa.fa-sort-asc.active
                    span.fa.fa-sort-desc
              th
          tbody
          - @referentials_tab.each do |i|
            tr
              td title="Voir"
                a href="/calendars/1"  = i["Id"]
              td = i["Slug"]
              td = i["NextReloadAt"]
              td = i["Tokens"][0]
              td.actions
                .btn-group
                  .btn.dropdown-toggle data-toggle="dropdown"
                    span.fa.fa-cog
                  ul.dropdown-menu
                    li
                      = link_to referential_partners_path(i["Slug"], token: i["Tokens"][0]) do
                        | Consulter
                    li
                      = link_to edit_referential_path({slug: i["Slug"], token: i["Tokens"][0], id: i["Id"], next_reload_at: i["NextReloadAt"]}) do
                        | Editer
                    li.delete-action
                      = link_to referential_path(i["Id"]), method: :delete, data: {confirm: "Are you sure you want to delete this referential ?"} do
                        span.fa.fa-trash.mr-xs
                        | Supprimer